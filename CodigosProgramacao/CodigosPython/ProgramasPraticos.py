# -*- coding: utf-8 -*-
"""Trabalho_Prático_02.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1poqbDE50ukKoY33IyivlzugGgfTkXbMR
"""

def criar_matriz():
  global poltronas, faturamentoTotal, qtdPassageiros, totalAssentos

  poltronas = []
  faturamentoTotal = 0
  qtdPassageiros = 0

  for fileira in range(2):
    assentos = ["V"] * 2 #V = poltrona Vazia; R = poltrona Reservada
    poltronas.append(assentos)

  totalAssentos = ( len(poltronas)* len(poltronas[0]) ) #Multiplica a linha pela coluna e fornece o tamanho total da matriz

def exibir_boas_vindas():
  print("Bem vindo ao Sistema de Vendas de Passagens Aéreas!\n")


def definir_preco_da_passagem():
  precoPassagem = input("  Antes de começar, insira o preço da passagem áerea para essa viagem. ")
  while precoPassagem.isdigit() == False: #Verificação de Erro 1 - verifica se a idade é um número ou não.
    precoPassagem = input("    • O preço informado é inválido. Informe um preço válido para a passagem áerea dessa viagem. ")
  precoPassagem = int(precoPassagem)
  print("  Agora, iniciando o Sistema de Vendas de Passagens Aéreas...\n")
  return precoPassagem


def calcular_faturamento(idadePassageiro):
  global faturamentoTotal

  while idadePassageiro.isdigit() == False: #Verificação de Erro 1 - verifica se a idade é um número ou não.
    idadePassageiro = input("      • A idade informada é inválida. Informe a idade correta do passageiro. ")

  idadePassageiro = int(idadePassageiro)
  if idadePassageiro < 5 or idadePassageiro > 65: ##Crianças menores de 5 anos e idosos acima de 65 anos pagam meia-passagem
    faturamentoTotal += precoPassagem/2
  else:
    faturamentoTotal += precoPassagem #Restante paga passagem total


def selecionar_fila(selectFila):
  while selectFila.isdigit() == False or int(selectFila)-1 not in range(len(poltronas)): #Verificação de Erro 2 - verifica se o nº de fila é um número ou não
    print("      • Você forneceu um número de fila inválido.")
    selectFila = input("        Informe um número de fila entre 1 e 4 para a poltrona. ")
  return int(selectFila)

def selecionar_poltrona(selectPoltrona):
  while selectPoltrona.isdigit() == False or int(selectPoltrona)-1 not in range(len(poltronas[0])):  #Verificação de Erro 3 - verifica se o nº de assento é um número ou não
    print("      • Você forneceu um número de assento inválido.")
    selectPoltrona = input("        Informe um número de assento entre 1 e 20 para a poltrona. ")
  return int(selectPoltrona)


def realizar_reserva(selectFila, selectPoltrona):
  global qtdPassageiros
  global continuaVenda

  if poltronas[selectFila-1][selectPoltrona-1] == "R": #Trecho que não permite que duas passagens sejam vendidas pra mesma poltrona
    while poltronas[int(selectFila)-1][int(selectPoltrona)-1] == "R":

      print(f"""\n    A poltrona {selectPoltrona} da fila {selectFila} já está reservada.
    Por favor, escolha um assento que ainda não esteja reservado.\n""")

      selectFila = (input("    2) Informe o número da fila da poltrona que ele gostaria de reservar. "))
      while selectFila.isdigit() == False or int(selectFila)-1 not in range(len(poltronas)): #Verificação de Erro 2 - verifica se o nº de fila é um número ou não
        print("      • Você forneceu um número de fila inválido.")
        selectFila = input("        Informe um número de fila entre 1 e 4 para a poltrona. ")
      selectFila = int(selectFila)


      selectPoltrona = (input("    3) Informe o número da poltrona que ele gostaria de reservar. "))
      while selectPoltrona.isdigit() == False or int(selectPoltrona)-1 not in range(len(poltronas[0])):  #Verificação de Erro 3 - verifica se o nº de assento é um número ou não
        print("      • Você forneceu um número de assento inválido.")
        selectPoltrona = input("        Informe um número de assento entre 1 e 20 para a poltrona. ")
      selectPoltrona = int(selectPoltrona)

    print(f"\n    A poltrona {selectPoltrona} da fila {selectFila} foi reservada com sucesso! ")
    qtdPassageiros += 1

  else:
    poltronas[selectFila-1][selectPoltrona-1] = "R"
    print(f"\n    A poltrona {selectPoltrona} da fila {selectFila} foi reservada com sucesso! ")
    qtdPassageiros += 1

def fazer_reserva():
  selectFila = input("    2) Informe o número da fila da poltrona que ele gostaria de reservar. ")
  selectFila = selecionar_fila(selectFila)

  selectPoltrona = input("    3) Informe o número da poltrona que ele gostaria de reservar. ")
  selectPoltrona = selecionar_poltrona(selectPoltrona)

  realizar_reserva(selectFila, selectPoltrona)


def verificar_qtdvendas(qtdPassageiros, totalAssentos):
  if qtdPassageiros == totalAssentos:
    print("\n  Todos as passagens foram compradas.")
    continuaVenda = 'N'

    return continuaVenda


def continuar_vendas(respostaOperador):
  global continuaVenda

  while respostaOperador != 'S' and respostaOperador != 'N': #Verificação de erro 4 - verifica se a resposta é 'S' ou 'N'
    print("\n    Você digitou um comando incorreto.")
    respostaOperador = input("""    Digite "S" para continuar ou "N" para terminar a venda de passagens. """)

  if respostaOperador == 'S': #Se sim, continua a venda
    continuaVenda = 'S'
    print("")

  elif respostaOperador == 'N': ##Se 'N', encerra a venda
    continuaVenda = 'N'


def exibir_mensagem_final(qtdPassageiros, totalAssentos):

  if qtdPassageiros < totalAssentos/2: #Mensagem se a Viagem for Cancelada por menos de 50% das passagens serem vendidas:

    if qtdPassageiros == 1: #Mensagem se apenas 1 passagem for vendida
      print(f"""

    O Sistema de Vendas de Passagens Aéreas terminou sua execução com sucesso.
    Abaixo, confira o status da viagem:


                            ---VIAGEM CANCELADA---

        > Menos de 50% das passagens foram vendidas:
          • Apenas {qtdPassageiros} passagem foi vendida de {totalAssentos} passagens disponíveis.
          • Faturamento total das vendas até o cancelamento da viagem era de: R$ {faturamentoTotal:.2f}
          • Taxa de ocupação da aeronave até o cancelamento da viagem era de: {qtdPassageiros}/{totalAssentos}
        """)

    else: #Mensagem Geral de Viagem Cancelada
      print(f"""

      O Sistema de Vendas de Passagens Aéreas terminou sua execução com sucesso.
      Abaixo, confira o status da viagem:


                            ---VIAGEM CANCELADA---

          > Menos de 50% das passagens foram vendidas:
            • Apenas {qtdPassageiros} passagens foram vendidas de {totalAssentos} passagens disponíveis.
            • Faturamento total das vendas até o cancelamento da viagem era de: R$ {faturamentoTotal:.2f}
            • Taxa de ocupação da aeronave até o cancelamento da viagem era de: {qtdPassageiros}/{totalAssentos}
          """)


  else: #Mensagem se a Viagem for Confirmada:
    print(f"""
    O Sistema de Vendas de Passagens Aéreas terminou sua execução com sucesso.
    Abaixo, confira o status da viagem, seu faturamento total e a taxa de ocupação da aeronave:


                            ---VIAGEM CONFIRMADA---

        > 50% das passagens ou mais foram vendidas:
          • {qtdPassageiros} passagens foram vendidas de {totalAssentos} passagens disponíveis.
          • Faturamento total das vendas: R$ {faturamentoTotal:.2f}
          • Taxa de ocupação da aeronave: {qtdPassageiros}/{totalAssentos}
        """)

resetar_matriz = criar_matriz

#Criar matriz de poltronas:
criar_matriz()

#Exibir Mensagem de Boas-vindas ao Operador:
exibir_boas_vindas()

#Definir preço da passagem para a viagem atual:
precoPassagem = definir_preco_da_passagem()

##Execucão do Sistema de Vendas de Passagens Aéreas:
continuaVenda = 'S' #Enquanto 'S' continua a venda de passagens; Quando mudar para 'N' todas as passagens serem vendidas, o sistema é encerrado.

while continuaVenda == 'S':

  ##1. Calcular o faturamento da viagem com base na idade do passageiro:
  idadePassageiro = input("    1) Informe o número da idade do passageiro. ")
  calcular_faturamento(idadePassageiro)

  ##2. Reservar poltrona e evitar a reserva dupla:
  fazer_reserva()

  ##3. Encerrar as vendas caso todas as passagens sejam vendidas:
  continuaVenda = verificar_qtdvendas(qtdPassageiros, totalAssentos)
  if continuaVenda == "N":
    break

  ##4. Perguntar ao operador se deseja continuar as vendas:
  respostaOperador = input("""\n    ⚠ Operador, deseja vender mais alguma passagem?
    Digite "S" para continuar ou "N" para terminar a venda de passagens aéreas. """) #Pergunta para continuar ou encerras a venda de passagens
  continuar_vendas(respostaOperador)

##Mensagem Final ao Operador:
exibir_mensagem_final(qtdPassageiros, totalAssentos)

##Resetar matriz de poltronas:
resetar_matriz()